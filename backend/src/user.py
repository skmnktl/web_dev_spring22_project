import crud
import json
from random import choice


class User:
    
    def __init__(self):
        self.id: int = None # number generated by sql
        self.password = None
        self.email = None
        self.accountType = None # subset of  "ATS" (s Student, t Teacher, a Admin)
        self.securityQuestions = dict()
        self.firstname
        self.lastname

        self.username = None # set equal to emai

        self.coursesAndAssignments = dict(list)


    def createUser(self,accountType, password, username, securityQuestions, firstname, lastname):
        self.accountType = accountType
        self.password = password
        self.username = username
        self.firstname = firstname
        self.lastname = lastname
        self.securityQuestions = None # TODO 


    @staticmethod
    def getUserInfo(username):
        row = crud.read("user","username",username)
        print(row)
    
    @staticmethod
    def updateSecurityQuestionAnswer(self, username, question, answer):
        old_questions = json.loads(crud.read("user","username",username,["securityQuestions"]))
        old_questions[question] = answer
    
    @staticmethod
    def chooseSecurityQuestionForPrompt(username):
        questions = json.loads(crud.read("user","username",username,["securityQuestions"]))
        return choice(questions.keys())
    
    @staticmethod
    def checkIfSecurityQuestionResponseIsRight(username, question, answer):
        questions = json.loads(crud.read("user","username",username,["securityQuestions"]))
        return questions[question] == answer
    
    def replaceSecurityQuestion(self, old_question, new_question, answer):
        questions = json.loads(crud.read("user","username",username,["securityQuestions"]))
        questions.pop(old_question)
        questions[new_question] = answer
        crud.write
    
    @staticmethod
    def authentication(username: str, password: str):
        return password == crud.read("user","username",username,["password"])
    
    @staticmethod
    def isStudent(username):
        return "S" in crud.read("user","username",username,["accountType"])
    
    @staticmethod
    def isTeacher(username):
        return "T" in crud.read("user","username",username,["accountType"])
    
    @staticmethod
    def isAdmin(username):
        return "A" in crud.read("user","username",username,["accountType"])
